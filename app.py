# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_mZqFLGUs2uqqmaSGJ2993uegMfhb2oO
"""

!pip install gradio

from google.colab import drive
drive.mount('Mydrive')

model_path = '/content/Mydrive/MyDrive/bird_classifier.h5'

# Commented out IPython magic to ensure Python compatibility.
# %cd /content
!git clone "https://github.com/Limteckping45/Cos30082_Assignment"

train_txt_path = '/content/Cos30082_Assignment/train.txt'
test_txt_path = '/content/Cos30082_Assignment/test.txt'
train_image_path = '/content/Cos30082_Assignment/Train'
test_image_path = '/content/Cos30082_Assignment/Test'

class_name_label_path = '/content/Cos30082_Assignment/class_name_labels.txt'
class_names = []
class_labels = []
with open(class_name_label_path, 'r') as file:
  for line in file:
    parts = line.strip().split()
    class_names.append(parts[0])
    class_labels.append(parts[1])
class_names = class_names
class_labels = class_labels

import gradio as gr
import tensorflow as tf
from tensorflow.keras.preprocessing import image
import numpy as np

# Load your trained model
model = tf.keras.models.load_model(model_path)  # Replace with the actual path

# Function to make predictions
def predict_image(input_image):
    img = image.load_img(input_image, target_size=(224, 224))
    img = image.img_to_array(img)
    img = np.expand_dims(img, axis=0)
    img = tf.keras.applications.resnet50.preprocess_input(img)
    prediction = model.predict(img)
    class_id = np.argmax(prediction, axis=1)[0]
    class_label = class_labels[class_id]
    return class_label

# Gradio Interface
input_image = gr.inputs.Image(type="filepath", label="Upload a testing image")
output_label = gr.outputs.Label(label="Predicted Label")

# Create the Gradio interface
gr.Interface(fn=predict_image, inputs=input_image, outputs=output_label).launch()